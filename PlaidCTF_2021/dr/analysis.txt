And: 满足Res中所有的要求
Alt: 满足Res中其中一个要求
Seq: 正则需要满足的序列
Lit: 一个一个匹配，字面量
Res: 数组
Star: 匹配0个或者多个
Eps: epsilon

Neg(Null): 匹配任意长度的

Neg:
    10c -> 10ca
    Neg( ... Alt(Res([Lit("af")])) ...) -> Neg( ... Alt(Res([Lit("f")])) ... )
    应该是禁止出现 af 的意思
    
    尝试 10caf 也失效了

Consider: 
    1: 1,7777,73331         0*16+1
    10: 16,7777,73331       (0*16+1)*16+0    
    100: 256,7777,73331     ((0*16+1)*16+0)*16+0
    10c: 268,7777,73331     ((0*16+1)*16+0)*16+0xc
    %733331

    相当于 Consider(Res([])) 的个数进制

Moon: 
    1: Moon([0-9],2,3), Moon([a-f],2,3), Moon( (([0-9],1,3), ([a-f],2,3)), 1, 2)
    10: Moon([0-9],3,3), Moon([a-f],2,3), Moon( (([0-9],1,3), ([a-f],2,3)), 1, 2)
    100: Moon([0-9],1,3), Moon([a-f],2,3), Moon( (([0-9],1,3), ([a-f],2,3)), 1, 2)
    10c: Moon([a-f],3,3), Moon( (([0-9],1,3), ([a-f],2,3)), 1, 2)
    
    相当于在算个数，如果个数相等了，这个 Moon 可以结束进入下一个

    100c 这个c就吃不进去，因为第一项是 Moon([0-9], 1, 3)

Fan:
    10: Neg(.. Fan([a-f], 6) ..)
    10b: Neg(.. Fan([a-f], 5) ..)
    倒数计数


条件约束有
1. Neg(Null) + Consider( [bcd], Lit("cdb")+Neg(bd) ], 0, 2, 3)  字符串 []cdb 或者 cdb[] 且不能为 cdbb cdbd
2. *[1-3] + (*[3-7] + Neg(Null))                                
3. Consider( [05a], [16b], [27cf], [38dx], [49e], 0, 0, 7 )     算法需要 最后 %7 == 0
4. Moon([0-9], 1, 3) + Moon([a-f], 2, 3) + Moon( Moon([0-9], 1, 3), Moon([a-f], 2, 3), 1, 2)    需要 数字(2 5 8...)+字符(1 4 7...)+数字(2 5 8...)+字符(1 4 7...) 
5. Moon(Lit("10"), 0, 3)                                        10需要出现3次
6. Neg( Alt( "af", "73", 数字+Lit("a"), Lit("ccc"), Fan([0-9], 7) )  )          af 73 数字+a ccc 都不能出现 数字也不能连续超过7个
   Neg( Alt( "a", Fan([0-9], 6)))                                               a 不能出现 数字不能连续超过6个
7. Neg( Neg(Null) + Fan([a-f]+Neg(Null), 6))                                    字母不能超过6个
8. Consider(0,1,2,3,4,5,6,7,8,9,a,b,c,d,e,f, 0,7777,73331)

1 4 7得 cdb 的串长度只能为 4且只能为 [b-f]cdb cdb[cf]
